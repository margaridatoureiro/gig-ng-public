import cloneDeep from 'lodash.clonedeep';
export class TableElement {
    delete() {
        this.source.delete(this.id);
    }
    confirmEditCreate() {
        if (this.id === -1) {
            return this.source.confirmCreate(this);
        }
        else {
            return this.source.confirmEdit(this);
        }
    }
    startEdit() {
        this.originalData = cloneDeep(this.currentData);
        this.editing = true;
    }
    cancelOrDelete() {
        if (this.id == -1 || !this.editing)
            this.delete();
        else {
            this.currentData = this.originalData;
            this.editing = false;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbmd4LW1hdGVyaWFsLXRhYmxlL3RhYmxlLWVsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxTQUFTLE1BQU0sa0JBQWtCLENBQUM7QUFJekMsTUFBTSxPQUFnQixZQUFZO0lBWWhDLE1BQU07UUFDSixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELGlCQUFpQjtRQUNmLElBQUksSUFBSSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBRTtZQUNsQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3hDO2FBQ0k7WUFDSCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3RDO0lBQ0gsQ0FBQztJQUVELFNBQVM7UUFDUCxJQUFJLENBQUMsWUFBWSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDdEIsQ0FBQztJQUVELGNBQWM7UUFDWixJQUFJLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTztZQUNoQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7YUFDWDtZQUNILElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztZQUNyQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztTQUN0QjtJQUNILENBQUM7Q0FHRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCBjbG9uZURlZXAgZnJvbSAnbG9kYXNoLmNsb25lZGVlcCc7XG5cbmltcG9ydCB7IFRhYmxlRGF0YVNvdXJjZSB9IGZyb20gJy4vdGFibGUtZGF0YS1zb3VyY2UnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgVGFibGVFbGVtZW50PFQ+IHtcbiAgaWQ6IG51bWJlcjtcbiAgb3JpZ2luYWxEYXRhPzogVDtcbiAgc291cmNlOiBUYWJsZURhdGFTb3VyY2U8VD47XG5cbiAgYWJzdHJhY3QgZ2V0IGVkaXRpbmcoKTogYm9vbGVhbjtcbiAgYWJzdHJhY3Qgc2V0IGVkaXRpbmcoZWRpdGluZzogYm9vbGVhbik7XG4gIGFic3RyYWN0IGdldCBjdXJyZW50RGF0YSgpOiBUO1xuICBhYnN0cmFjdCBzZXQgY3VycmVudERhdGEoY3VycmVudERhdGE6IFQpO1xuICBhYnN0cmFjdCBnZXQgdmFsaWRhdG9yKCk6IEZvcm1Hcm91cDtcbiAgYWJzdHJhY3Qgc2V0IHZhbGlkYXRvcih2YWxpZGF0b3I6IEZvcm1Hcm91cCk7XG5cbiAgZGVsZXRlKCk6IHZvaWQge1xuICAgIHRoaXMuc291cmNlLmRlbGV0ZSh0aGlzLmlkKTtcbiAgfVxuXG4gIGNvbmZpcm1FZGl0Q3JlYXRlKCk6IGJvb2xlYW4ge1xuICAgIGlmICh0aGlzLmlkID09PSAtMSkge1xuICAgICAgcmV0dXJuIHRoaXMuc291cmNlLmNvbmZpcm1DcmVhdGUodGhpcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuc291cmNlLmNvbmZpcm1FZGl0KHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXJ0RWRpdCgpOiB2b2lkIHtcbiAgICB0aGlzLm9yaWdpbmFsRGF0YSA9IGNsb25lRGVlcCh0aGlzLmN1cnJlbnREYXRhKTtcbiAgICB0aGlzLmVkaXRpbmcgPSB0cnVlO1xuICB9XG5cbiAgY2FuY2VsT3JEZWxldGUoKSB7XG4gICAgaWYgKHRoaXMuaWQgPT0gLTEgfHwgIXRoaXMuZWRpdGluZylcbiAgICAgIHRoaXMuZGVsZXRlKCk7XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLmN1cnJlbnREYXRhID0gdGhpcy5vcmlnaW5hbERhdGE7XG4gICAgICB0aGlzLmVkaXRpbmcgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBhYnN0cmFjdCBpc1ZhbGlkKCk6IGJvb2xlYW47XG59XG4iXX0=